version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: mcpvault_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: mcpvault
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      POSTGRES_DB: mcpvault
    ports:
      - "${POSTGRES_PORT:-14300}:5432"
    volumes:
      - mcpvault_postgres_data:/var/lib/postgresql/data
      - ./dbbuilder/mcpvault/schemas:/docker-entrypoint-initdb.d/schemas:ro
      - ./dbbuilder/mcpvault/procedures:/docker-entrypoint-initdb.d/procedures:ro
    networks:
      mcpvault_network:
        ipv4_address: 172.30.0.2
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mcpvault -d mcpvault"]
      interval: 10s
      timeout: 5s
      retries: 5
    labels:
      project: "mcpvault"

  redis:
    image: redis:7-alpine
    container_name: mcpvault_redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-changeme}
    ports:
      - "${REDIS_PORT:-14301}:6379"
    volumes:
      - mcpvault_redis_data:/data
    networks:
      mcpvault_network:
        ipv4_address: 172.30.0.3
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    labels:
      project: "mcpvault"

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: mcpvault_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@mcpvault.local}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-changeme}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "${PGADMIN_PORT:-14310}:80"
    networks:
      mcpvault_network:
        ipv4_address: 172.30.0.10
    depends_on:
      - postgres
    labels:
      project: "mcpvault"

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: mcpvault_redis_commander
    restart: unless-stopped
    environment:
      REDIS_HOSTS: local:redis:6379:0:${REDIS_PASSWORD:-changeme}
    ports:
      - "${REDIS_COMMANDER_PORT:-14320}:8081"
    networks:
      mcpvault_network:
        ipv4_address: 172.30.0.20
    depends_on:
      - redis
    labels:
      project: "mcpvault"

networks:
  mcpvault_network:
    name: mcpvault_network
    driver: bridge
    ipam:
      config:
        - subnet: ${NETWORK_SUBNET:-172.30.0.0/16}

volumes:
  mcpvault_postgres_data:
    name: mcpvault_postgres_data
    labels:
      project: "mcpvault"
  mcpvault_redis_data:
    name: mcpvault_redis_data
    labels:
      project: "mcpvault"